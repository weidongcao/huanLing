;固定写法
[loggers]
;创建3个app名,root是父类必需存在
keys=root, fileLogger

###############################################

[logger_root]
;设置日志级别
level=DEBUG
;这里在'root'appname下可以不填,所有油区获取get的情况下默认app名都是root
qualname=root
;设置指定过滤器,多个以逗号分隔,这个名字待会我们会以固定格式'handler_(value)'创建
;这里配置root同时写入控制台及文件
handlers=consoleHandler, fileHandler
; 对应loggers section下的file

[logger_fileLogger]
level=INFO
; 除了root appname以外,定义的app史必须要设置这个属性,用于定义打印输出时候的app名
qualname=fileLogger
;设置指定过滤器,多个以逗号分隔,这个名字待会我们会以固定格式'handler_(value)'创建
handlers=fileHandler
; 固定写法

###############################################

[handlers]
;定义过滤器名称,下面定义以handler_keysname格式定义,上面引用名称必须和keys一致
keys=consoleHandler,fileHandler

;该Handler写入控制台
[handler_consoleHandler]
class=StreamHandler
level=DEBUG
formatter=fmt
args=(sys.stdout,)

;该Handler写入文件
[handler_fileHandler]
class=FileHandler
level=INFO
formatter=fmt
args=('aliCloudDomainNameMapping.log','a')

###############################################
;固定格式
;定义日志输出模式
[formatters]      
;定义名称，下面会引用格式同上
keys=fmt , fmt01, fmt02   

[formatter_fmt]
;日志输出格式
format=%(asctime)s [%(levelname)s] : %(message)s
;日期输出格式
datefmt=%Y-%m-%d %H:%M:%S
 
[formatter_fmt01]
;日志输出格式
;年-月-日 时-分-秒,毫秒，文件名,级别名，消息信息
format=%(asctime)s %(filename)s %(levelname)s %(message)s 
;日期输出格式
datefmt=%Y-%m-%d %H:%M:%S 
 
[formatter_fmt02]
;日志输出格式
format=%(asctime)s %(filename)s %(levelname)s %(message)s
;日期输出格式
datefmt=%Y-%m-%d %H:%M:%S

